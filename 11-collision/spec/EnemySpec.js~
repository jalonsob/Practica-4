describe("Clase EnemySpec", function(){
  var canvas, ctx;

  beforeEach(function(){
    loadFixtures('index.html');

    canvas = $('#game')[0];
    expect(canvas).toExist();

    ctx = canvas.getContext('2d');
    expect(ctx).toBeDefined();

    //Creo los sprites para todo tipo de objetos en el juego, si no los creo puedo tener quejas en this.sprite, linea 235 y 234 del game.js
    SpriteSheet = {
          map : {missile: { sx: 0, sy: 30, w: 2, h: 10, frames: 1 },
                  ship: { sx: 0, sy: 0, w: 37, h: 42, frames: 1 },
                  enemy_purple: { sx: 37, sy: 0, w: 42, h: 43, frames: 1 },
                  enemy_bee: { sx: 79, sy: 0, w: 37, h: 43, frames: 1 },
                  enemy_ship: { sx: 116, sy: 0, w: 42, h: 43, frames: 1 },
                  enemy_circle: { sx: 158, sy: 0, w: 32, h: 33, frames: 1 }
                },
          draw: function(){},
        };
  
    });

  it("draw",function(){

        //Es mejor crearme el tipo basico de enemigo aqui, porque si uso el de game.js puede que obtenga errores no deseados al usar basura
        //Si hago las pruebas del chasis de un coche, hago la prueba del chasis y no le meto el motor dentro
        basic= { x: 100, y: -50, sprite: 'enemy_purple', B: 100, C: 2 , E: 100 }

        var gameb = new GameBoard();
        enemy= new Enemy(basic);
        
        gameb.add(enemy);
        gameb.add(new Enemy(basic, { x: 200 })); 

        spyOn(SpriteSheet, "draw");

        enemy.draw(ctx);
        expect(SpriteSheet.draw).toHaveBeenCalled();
        expect(SpriteSheet.draw.calls[0].args[1]).toEqual("enemy_purple");
        expect(SpriteSheet.draw.calls[0].args[2]).toEqual(enemy.x);
        expect(SpriteSheet.draw.calls[0].args[3]).toEqual(enemy.y);   
    });

    it("step",function(){
    
      enemy = new Enemy({ x: 100, y: -50, sprite: 'enemy_purple', B: 100, C: 2 , E: 100 });
      var gameb=  new GameBoard();
      gameb.add(enemy);
      spyOn(gameb, "remove");
      enemy.step(200);
      expect(enemy.remove).toHaveBeenCalled(); 
    

 
    });


});
